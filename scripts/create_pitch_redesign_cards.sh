#!/bin/bash
# Create Elevator Pitch Redesign Cards
# SO-REFACTOR-PITCH-001, SO-FEAT-PITCH-002, SO-UX-PITCH-003, SO-AI-PITCH-004

TRELLO=~/Documents/trello-cli-python/trello
DESIGN_LIST="68fd600bd73b50cb33c875bd"    # üìê Design/Specs
POLISH_LIST="68fd600c2ce09f6e28d3ec5d"    # ‚ú® Polish

echo "üé® Creating Elevator Pitch Redesign Cards..."
echo ""

# ========================================
# CARD 1: SO-REFACTOR-PITCH-001 (Polish List)
# ========================================

echo "1Ô∏è‚É£  Creating SO-REFACTOR-PITCH-001..."
CARD_ID=$($TRELLO add-card "$POLISH_LIST" "üß± SO-REFACTOR-PITCH-001: Layout & Margin Redesign" "**Tipo:** Refactor | **√Årea:** UI | **Prioridad:** P0 | **Sprint:** W46

**Descripci√≥n:**
El contenido del panel Elevator Pitch no est√° centrado ni con m√°rgenes adecuados. Necesita dise√±o limpio y profesional.

**Problemas Actuales:**
- Contenido pegado a los bordes
- Sin max-width para l√≠neas de texto largas
- Falta padding uniforme
- Dise√±o poco profesional

**Acciones:**
1. Implementar layout centrado con max-width de 800px
2. A√±adir padding consistente (p-8 o superior)
3. Mejorar spacing entre secciones (space-y-6)
4. A√±adir border sutil para definir √°rea de contenido
5. Aplicar liquid-glass effect consistente con el resto de la app

**Dise√±o Propuesto:**
\`\`\`tsx
<div className=\"h-full overflow-y-auto\">
  <div className=\"max-w-4xl mx-auto p-8 space-y-6\">
    <div className=\"liquid-glass rounded-2xl p-6 border border-macBorder/30\">
      {/* Content here */}
    </div>
  </div>
</div>
\`\`\`

**Resultado Esperado:**
- Layout centrado y profesional
- M√°rgenes uniformes
- Legibilidad mejorada
- Consistente con macOS aesthetic

**Due Date:** 02-nov-2025
**Sprint:** W46" | grep "ID:" | awk '{print $2}')

echo "  Adding labels..."
$TRELLO add-label "$CARD_ID" "red" "P0" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "lime" "S" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "pink" "UI" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "yellow" "Refactor" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "purple" "Sprint-W46" > /dev/null 2>&1
$TRELLO set-due "$CARD_ID" "2025-11-02" > /dev/null 2>&1
echo "  ‚úÖ SO-REFACTOR-PITCH-001 created"
echo ""

# ========================================
# CARD 2: SO-FEAT-PITCH-002 (Design/Specs List)
# ========================================

echo "2Ô∏è‚É£  Creating SO-FEAT-PITCH-002..."
CARD_ID=$($TRELLO add-card "$DESIGN_LIST" "üìù SO-FEAT-PITCH-002: Markdown Editor + Live Preview" "**Tipo:** Feature | **√Årea:** UI | **Prioridad:** P0 | **Sprint:** W46

**Descripci√≥n:**
Reemplazar textarea simple por editor Markdown profesional con preview en tiempo real.

**Problemas Actuales:**
- Textarea b√°sico sin formato
- Sin preview del resultado final
- Experiencia de edici√≥n pobre
- No hay syntax highlighting

**Acciones:**
1. Integrar react-markdown o similar
2. Implementar editor con syntax highlighting (e.g., CodeMirror o Monaco)
3. Split view: Editor (izquierda) | Preview (derecha)
4. Auto-save despu√©s de 1s de inactividad
5. Bot√≥n \"Copy to Clipboard\" para el pitch final
6. Contador de palabras y tiempo estimado de lectura

**Dependencias:**
\`\`\`bash
npm install react-markdown remark-gfm react-syntax-highlighter
\`\`\`

**Dise√±o Propuesto:**
\`\`\`tsx
<div className=\"grid grid-cols-2 gap-6\">
  <div className=\"liquid-glass rounded-xl p-4 border border-macBorder/30\">
    <h3>‚úèÔ∏è Edit Your Pitch</h3>
    <MarkdownEditor
      value={pitch}
      onChange={handleChange}
      placeholder=\"Write your elevator pitch using Markdown...\"
    />
    <div className=\"text-xs text-macSubtext mt-2\">
      {wordCount} words ‚Ä¢ ~{readTime}s read
    </div>
  </div>

  <div className=\"liquid-glass rounded-xl p-4 border border-macBorder/30\">
    <h3>üëÅÔ∏è Live Preview</h3>
    <ReactMarkdown>{pitch}</ReactMarkdown>
    <button onClick={copyToClipboard}>
      üìã Copy to Clipboard
    </button>
  </div>
</div>
\`\`\`

**Resultado Esperado:**
- Editor Markdown profesional
- Preview en tiempo real
- Auto-save funcional
- UX moderna y fluida

**Due Date:** 04-nov-2025
**Sprint:** W46" | grep "ID:" | awk '{print $2}')

echo "  Adding labels..."
$TRELLO add-label "$CARD_ID" "red" "P0" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "yellow" "M" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "pink" "UI" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "green" "Feature" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "purple" "Sprint-W46" > /dev/null 2>&1
$TRELLO set-due "$CARD_ID" "2025-11-04" > /dev/null 2>&1
echo "  ‚úÖ SO-FEAT-PITCH-002 created"
echo ""

# ========================================
# CARD 3: SO-UX-PITCH-003 (Polish List)
# ========================================

echo "3Ô∏è‚É£  Creating SO-UX-PITCH-003..."
CARD_ID=$($TRELLO add-card "$POLISH_LIST" "‚ú® SO-UX-PITCH-003: Scroll & Modern Interaction Redesign" "**Tipo:** Enhancement | **√Årea:** UI | **Prioridad:** P1 | **Sprint:** W46

**Descripci√≥n:**
Mejorar scroll, animaciones y micro-interacciones del panel Elevator Pitch.

**Problemas Actuales:**
- Scroll deficiente o inexistente
- Sin animaciones smooth
- Transiciones abruptas
- Falta feedback visual en interacciones

**Acciones:**
1. Implementar smooth scroll con \`overflow-y-auto\` y \`scroll-smooth\`
2. A√±adir framer-motion animations:
   - Fade-in al cargar panel
   - Stagger animations para secciones
   - Hover effects en botones
3. A√±adir loading states con skeleton loaders
4. Implementar toast notifications para acciones (save, copy)
5. A√±adir scroll-to-top button cuando scroll > 300px

**Implementaci√≥n:**
\`\`\`tsx
import { motion } from 'framer-motion';

<motion.div
  initial={{ opacity: 0, y: 20 }}
  animate={{ opacity: 1, y: 0 }}
  transition={{ duration: 0.4, ease: 'easeOut' }}
  className=\"h-full overflow-y-auto scroll-smooth\"
>
  {/* Content with smooth scroll */}
</motion.div>

// Stagger children
<motion.div
  variants={{
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: { staggerChildren: 0.1 }
    }
  }}
>
  {sections.map(section => (
    <motion.div
      variants={{
        hidden: { opacity: 0, y: 20 },
        show: { opacity: 1, y: 0 }
      }}
    >
      {section}
    </motion.div>
  ))}
</motion.div>
\`\`\`

**Resultado Esperado:**
- Scroll suave y funcional
- Animaciones fluidas
- Feedback visual claro
- UX moderna tipo Notion/Linear

**Due Date:** 03-nov-2025
**Sprint:** W46" | grep "ID:" | awk '{print $2}')

echo "  Adding labels..."
$TRELLO add-label "$CARD_ID" "yellow" "P1" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "lime" "S" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "pink" "UI" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "blue" "Enhancement" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "purple" "Sprint-W46" > /dev/null 2>&1
$TRELLO set-due "$CARD_ID" "2025-11-03" > /dev/null 2>&1
echo "  ‚úÖ SO-UX-PITCH-003 created"
echo ""

# ========================================
# CARD 4: SO-AI-PITCH-004 (Design/Specs List)
# ========================================

echo "4Ô∏è‚É£  Creating SO-AI-PITCH-004..."
CARD_ID=$($TRELLO add-card "$DESIGN_LIST" "ü§ñ SO-AI-PITCH-004: Claude Pitch Assistant Stub" "**Tipo:** Feature | **√Årea:** AI | **Prioridad:** P2 | **Sprint:** W46

**Descripci√≥n:**
Crear stub/placeholder para asistente inteligente de pitch (integraci√≥n con Claude API).

**Problemas Actuales:**
- Panel de ayuda inexistente
- No hay sugerencias inteligentes
- Usuario escribe desde cero sin gu√≠a

**Acciones (Stub Phase):**
1. Crear componente \`<ClaudePitchAssistant />\` con UI placeholder
2. A√±adir bot√≥n \"‚ú® Get AI Suggestions\" (disabled con tooltip \"Coming soon\")
3. Dise√±ar panel lateral colapsable para sugerencias futuras
4. Crear mock data para visualizar c√≥mo se ver√°n las sugerencias
5. Documentar arquitectura para integraci√≥n real en futuro sprint

**Dise√±o Propuesto:**
\`\`\`tsx
<div className=\"relative\">
  {/* Main pitch editor */}
  <PitchEditor />

  {/* AI Assistant Sidebar (collapsed by default) */}
  <motion.div
    className=\"absolute right-0 top-0 h-full w-80 liquid-glass border-l border-macBorder/30\"
    initial={{ x: '100%' }}
    animate={{ x: showAssistant ? 0 : '100%' }}
  >
    <div className=\"p-4 space-y-4\">
      <h3 className=\"text-lg font-bold flex items-center gap-2\">
        <Icon name=\"sparkles\" className=\"text-macAccent\" />
        AI Pitch Coach
      </h3>

      {/* Mock suggestions */}
      <div className=\"space-y-3\">
        <SuggestionCard
          type=\"structure\"
          title=\"Improve Structure\"
          suggestion=\"Consider starting with a hook...\"
        />
        <SuggestionCard
          type=\"clarity\"
          title=\"Enhance Clarity\"
          suggestion=\"Simplify this sentence...\"
        />
      </div>

      <button
        className=\"btn-primary w-full\"
        disabled
        title=\"Coming in next sprint\"
      >
        ‚ú® Get AI Suggestions
      </button>
    </div>
  </motion.div>
</div>
\`\`\`

**Documentation:**
Crear \`/docs/ai/pitch_assistant_architecture.md\` con:
- API endpoints necesarios
- Prompt engineering strategy
- Response parsing logic
- Token management

**Resultado Esperado:**
- UI funcional para futuro asistente AI
- Arquitectura documentada
- Mock data para visualizaci√≥n
- Sin integraci√≥n real a√∫n (P2)

**Due Date:** 05-nov-2025
**Sprint:** W46" | grep "ID:" | awk '{print $2}')

echo "  Adding labels..."
$TRELLO add-label "$CARD_ID" "brown" "P2" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "lime" "S" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "purple" "AI" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "green" "Feature" > /dev/null 2>&1
$TRELLO add-label "$CARD_ID" "purple" "Sprint-W46" > /dev/null 2>&1
$TRELLO set-due "$CARD_ID" "2025-11-05" > /dev/null 2>&1
echo "  ‚úÖ SO-AI-PITCH-004 created"
echo ""

echo "‚úÖ All 4 Elevator Pitch Redesign cards created!"
echo ""
echo "üìä Summary:"
echo "  - SO-REFACTOR-PITCH-001: Layout & Margins (P0, S, UI, Refactor) ‚Üí ‚ú® Polish"
echo "  - SO-FEAT-PITCH-002: Markdown Editor (P0, M, UI, Feature) ‚Üí üìê Design/Specs"
echo "  - SO-UX-PITCH-003: Scroll & Animations (P1, S, UI, Enhancement) ‚Üí ‚ú® Polish"
echo "  - SO-AI-PITCH-004: Claude Assistant Stub (P2, S, AI, Feature) ‚Üí üìê Design/Specs"
echo ""
echo "üìã Total estimado: 17h"
echo "üéØ Sprint W46 ready to go!"
